openapi: 3.0.0
info:
  title: Event Management System API
  version: 1.0.0
  description: Complete API documentation for all routes and controllers
servers:
  - url: http://https://prostruct-assignment.onrender.com/api
    description: Development server

paths:
  /users/register:
    post:
      tags:
        - Users
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - email
                - password
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: User already exists
        "500":
          description: Failed to register user

  /users/login:
    post:
      tags:
        - Users
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: Invalid email or password
        "500":
          description: Failed to login user

  /users/{id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
        "500":
          description: Failed to retrieve user

    put:
      tags:
        - Users
      summary: Update user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        "200":
          description: User updated successfully
        "404":
          description: User not found
        "500":
          description: Failed to update user

  /events:
    post:
      tags:
        - Events
      summary: Create new event
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                date:
                  type: string
                  format: date-time
                location:
                  type: string
                capacity:
                  type: integer
      responses:
        "201":
          description: Event created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "500":
          description: Failed to create event

    get:
      tags:
        - Events
      summary: Get all events
      responses:
        "200":
          description: List of all events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
        "500":
          description: Failed to retrieve events

  /events/{id}:
    get:
      tags:
        - Events
      summary: Get event by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Event details retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "404":
          description: Event not found
        "500":
          description: Failed to retrieve event

    put:
      tags:
        - Events
      summary: Update event
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventInput"
      responses:
        "200":
          description: Event updated successfully
        "403":
          description: Not authorized to update event
        "404":
          description: Event not found
        "500":
          description: Failed to update event

    delete:
      tags:
        - Events
      summary: Delete event
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Event deleted successfully
        "403":
          description: Not authorized to delete event
        "404":
          description: Event not found
        "500":
          description: Failed to delete event

  /events/{id}/register:
    post:
      tags:
        - Event Registration
      summary: Register for event
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Successfully registered for event
        "400":
          description: Already registered or event is full
        "404":
          description: Event not found
        "500":
          description: Failed to register for event

    delete:
      tags:
        - Event Registration
      summary: Cancel event registration
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Registration cancelled successfully
        "400":
          description: Not registered for this event
        "404":
          description: Event not found
        "500":
          description: Failed to cancel registration

  /events/{id}/attendees:
    get:
      tags:
        - Event Registration
      summary: Get event attendees
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of event attendees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "404":
          description: Event not found
        "500":
          description: Failed to retrieve attendees

  /analytics/events/popular:
    get:
      tags:
        - Analytics
      summary: Get popular events
      responses:
        "200":
          description: List of popular events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
        "500":
          description: Error retrieving popular events

  /analytics/users/active:
    get:
      tags:
        - Analytics
      summary: Get most active users
      responses:
        "200":
          description: List of most active users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                    numberOfRegistrations:
                      type: integer
        "500":
          description: Error retrieving active users

  /analytics/events/{id}/stats:
    get:
      tags:
        - Analytics
      summary: Get event statistics
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Event statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  date:
                    type: string
                  location:
                    type: string
                  totalAttendees:
                    type: integer
        "404":
          description: Event not found
        "500":
          description: Error retrieving event stats

  /notifications/send:
    post:
      tags:
        - Notifications
      summary: Send notification to event attendees
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: string
                message:
                  type: string
              required:
                - event_id
                - message
      responses:
        "200":
          description: Notification sent successfully
        "404":
          description: Event not found
        "500":
          description: Error sending notification

  /admin/users:
    get:
      tags:
        - Admin
      summary: Get all users (paginated)
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  limit:
                    type: integer
                  totalUsers:
                    type: integer
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "500":
          description: Server error

  /admin/events:
    get:
      tags:
        - Admin
      summary: Get all events with registrations
      security:
        - BearerAuth: []
      responses:
        "200":
          description: List of events with registrations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
        "500":
          description: Server error

  /admin/users/{id}:
    delete:
      tags:
        - Admin
      summary: Delete user
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User deleted successfully
        "500":
          description: Server error

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        isDeleted:
          type: boolean

    Event:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        date:
          type: string
          format: date-time
        location:
          type: string
        capacity:
          type: integer
        organizer:
          type: string
        attendees:
          type: array
          items:
            type: string

    EventInput:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        date:
          type: string
          format: date-time
        location:
          type: string
        capacity:
          type: integer

    AuthResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        token:
          type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
